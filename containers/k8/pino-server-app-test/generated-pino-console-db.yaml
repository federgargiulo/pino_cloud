---
# Source: pino-console-db/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pino-console-db
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  password: "U3VwZXJTZWNyZXQ="
  servers.json: "ewogICJTZXJ2ZXJzIjogewogICAgIjEiOiB7CiAgICAgICJOYW1lIjogIlBvc3RncmVTUUwgaW50ZXJubyIsCiAgICAgICJHcm91cCI6ICJTZXJ2ZXJzIiwKICAgICAgIkhvc3QiOiAicGluby1kYi1pZHAiLAogICAgICAiUG9ydCI6IDU0MzIsCiAgICAgICJVc2VybmFtZSI6ICJrZXljbG9hayIsCiAgICAgICJTU0xNb2RlIjogInByZWZlciIsCiAgICAgICJNYWludGVuYW5jZURCIjogInBvc3RncmVzIgogICAgfQogIH0KfQ=="
---
# Source: pino-console-db/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pino-console-db
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: pino-console-db/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pino-console-db
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    external-dns.alpha.kubernetes.io/hostname: pino-console-db.workload.nemo.onelab.eu
    nemo.eu/ingress-expose: "true"
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: pino-console-db
    app.kubernetes.io/instance: pino-console-db
---
# Source: pino-console-db/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pino-console-db
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pino-console-db
      app.kubernetes.io/instance: pino-console-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pino-console-db
        app.kubernetes.io/instance: pino-console-db
    spec:
      initContainers:
        - name: init-pgadmin
          image: "dpage/pgadmin4:8.14"
          imagePullPolicy: IfNotPresent
          command: ["/bin/chown", "-R", "5050:5050", "/var/lib/pgadmin"]
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          securityContext:
            runAsUser: 0
      containers:
        - name: pino-console-db
          image: "dpage/pgadmin4:8.14"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /misc/ping
              port: 80
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          env:
            - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
              value: "False"
            - name: PGADMIN_DEFAULT_EMAIL
              value: salvatore76@gmail.com
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pino-console-db
                  key: password
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
            - name: definitions
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
          resources:
            {}
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pino-console-db
        - name: definitions
          secret:
            secretName: pino-console-db
            items:
            - key: servers.json
              path: servers.json
      securityContext:
        fsGroup: 5050
        runAsGroup: 5050
        runAsUser: 5050
---
# Source: pino-console-db/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pino-console-db
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    external-dns.alpha.kubernetes.io/hostname: pino-console-db.workload.nemo.onelab.eu
    nemo.eu/ingress-expose: "true"
spec:
  rules:
    - host: "pino-console-db.workload.nemo.onelab.eu"
      http:
        paths:
          - path: "/"
            pathType: ImplementationSpecific
            backend:
              service:
                name: pino-console-db
                port:
                  name: http
---
# Source: pino-console-db/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "pino-console-db-test-connection"
  labels:
    app.kubernetes.io/name: pino-console-db
    helm.sh/chart: pino-console-db-1.0.0
    app.kubernetes.io/instance: pino-console-db
    app.kubernetes.io/version: "4.18.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['pino-console-db:80']
  restartPolicy: Never
